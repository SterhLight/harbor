---
- name: Ensure group "docker" exists
  ansible.builtin.group:
    name: docker
    state: present

- name: Add users to docker group
  ansible.builtin.user:
    name: "{{ item.name }}"
    groups: docker
    append: true
  loop:
    - { name: "{{ ansible_user }}" }
    - { name: root }

- name: Extract archives
  ansible.builtin.unarchive:
    src: "{{ download_folder }}/{{ item.src }}"
    dest: "{{ item.dest }}"
    extra_opts: "{{ item.extra_opts | default([]) }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ '0755' if item.force_mode else item.mode | default(omit) }}"
  loop:
    - { src: "docker-{{ docker_version }}.tgz", dest: "{{ binar_folder }}", owner: '0', group: 'docker', mode: '0755', force_mode: true, extra_opts: ["--strip-components=1"] }
    - { src: "{{ harbor_arh }}-v{{ harbor_version }}.tgz", dest: "{{ harbor_folder }}/harbor_{{ harbor_version }}", owner: '0', group: '0', force_mode: false, extra_opts: [] }

- name: Copy files
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { src: "{{ download_folder }}/docker-compose", dest: "{{ binar_folder }}", owner: '0', group: 'docker', mode: '0755' }
    - { src: "docker.service", dest: "/etc/systemd/system/docker.service", owner: '0', group: '0', mode: '0644' }
    - {src: "{{ certificate }}", dest: "{{ certificate_folder }}", mode: "0644", owner: "{{ owner }}", group: "{{ group }}"}
    - {src: "{{ private_key }}", dest: "{{ certificate_folder }}", mode: "0600", owner: "{{ owner }}", group: "{{ group }}"}

- name: Reload systemd daemon and enable Docker service
  ansible.builtin.systemd:
    daemon_reexec: yes
    name: docker
    enabled: yes

- name: Reboot the server
  ansible.builtin.reboot: